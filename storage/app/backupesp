#include <SoftwareSerial.h>
String ssid="freewifi";
String password ="12345678";
String readresult="null";
boolean DEBUG=true;
SoftwareSerial espSerial = SoftwareSerial(7,8);
int ct=0;
int pin_a0 = A1;
int sensor_value = 0;

void(* resetFunc) (void) = 0;

void showResponse(int waitTime){
long t=millis();
char c;
while (t+waitTime>millis()){
  if (espSerial.available()){
    c=espSerial.read();
    if (DEBUG){
      Serial.print(c);
      if(espSerial.find("DIS"))
      {
        Serial.println("No Signal!");  
        resetFunc();
      }
      //else
      //{
        //Serial.println("...");  
      //}
  
    } 
  }
}
 
}

void setup() {
  // put your setup code here, to run once:
   Serial.begin(9600);

   pinMode(pin_a0,INPUT);
   
   espSerial.begin(115200); // enable software serial
  // Your esp8266 module's speed is probably at 115200.
  // For this reason the first time set the speed to 115200 or to your esp8266 configured speed
  // and upload. Then change to 9600 and upload again

 
  espSerial.println("AT+RST"); // Enable this line to reset the module;
  showResponse(1000);
 
  //espSerial.println("AT+UART_CUR=9600,8,1,0,0"); // Enable this line to set esp8266 serial speed to 9600 bps
  //showResponse(1000);
 
  espSerial.println("AT+CWMODE=1"); // Mode client
  showResponse(1000);
 
  espSerial.println("AT+CWJAP=\""+ssid+"\",\""+password+"\""); // koneksi ke jaringan LAN
  showResponse(5000);
 
  
  delay(1000);

}

void loop() {
  // put your main code here, to run repeatedly:
    //espSerial.begin(115200); // enable software serial
    // Your esp8266 module's speed is probably at 115200.
    // For this reason the first time set the speed to 115200 or to your esp8266 configured speed
    // and upload. Then change to 9600 and upload again
 
    //espSerial.println("AT+RST"); // Enable this line to reset the module;
    //showResponse(1000);
 
    //espSerial.println("AT+UART_CUR=9600,8,1,0,0"); // Enable this line to set esp8266 serial speed to 9600 bps
    //showResponse(1000);
 
    //espSerial.println("AT+CWMODE=1"); // Mode client
    //showResponse(1000);
 
    //espSerial.println("AT+CWJAP=\""+ssid+"\",\""+password+"\""); // koneksi ke jaringan LAN
    //showResponse(5000);
    sensor_value=analogRead(pin_a0);
    dataWrite(String(sensor_value),"2","3","4","5","6");
    
    if(readresult=="null")
    {
      //pending
    }
    else
    {
      //sent
      Serial.println("sent");
    }


}

boolean dataWrite(String serial, String bbm, String rh, String tegangan, String arus, String versi){
  
  espSerial.println("AT+CIPSSLSIZE=4096");
  String cmd = "AT+CIPSTART=\"SSL\",\""; // TCP connection
  cmd += "192.168.43.229"; // hostname
  cmd += "\",443";
  espSerial.println(cmd);
  if (DEBUG) Serial.println(cmd);
  if(espSerial.find("Error")){
   //resetFunc();
  if (DEBUG) Serial.println("AT+CIPSTART error");
  return false;
  }
   
  //String getStr = "GET /arduinoserial/data.php?s="; // prepare GET string
  String getStr = "GET /mq135/getfromdevice/"; // prepare GET string
  getStr += serial;
  getStr += " HTTP/2.0\r\nHost: 192.168.43.229\r\n\r\n";
   
  // send data length
  cmd = "AT+CIPSEND=";
  cmd += String(getStr.length());
  espSerial.println(cmd);
  if (DEBUG) Serial.println(cmd);
   
  delay(100);
  if(espSerial.find(">")){
  espSerial.print(getStr);
  readresult="somewords";
  if (DEBUG) Serial.print(getStr);
  }
  else{
  readresult="null";
  ct++;
  if(ct>20)
  {
    resetFunc();  
  }
  Serial.println(ct);
  espSerial.println("AT+CIPCLOSE");
  // alert user
  if (DEBUG) Serial.println("AT+CIPCLOSE");
  return false;
  }
  return true;
 
}